import{_ as a,c as e,o as s,ae as t}from"./chunks/framework.Dq7KSw7C.js";const k=JSON.parse('{"title":"How to create a holochain runtime","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/how-to-create-a-holochain-runtime.md","filePath":"documentation/how-to-create-a-holochain-runtime.md"}'),n={name:"documentation/how-to-create-a-holochain-runtime.md"};function l(o,i,h,p,d,r){return s(),e("div",null,i[0]||(i[0]=[t(`<h1 id="how-to-create-a-holochain-runtime" tabindex="-1">How to create a holochain runtime <a class="header-anchor" href="#how-to-create-a-holochain-runtime" aria-label="Permalink to &quot;How to create a holochain runtime&quot;">​</a></h1><p>A <strong>holochain runtime</strong> is an end-user application that is able to install and open holochain apps and web-apps. Examples of existing runtimes include the <a href="https://github.com/holochain/launcher" target="_blank" rel="noreferrer">launcher</a> and <a href="https://github.com/lightningrodlabs/we" target="_blank" rel="noreferrer">moss</a>.</p><h2 id="scaffolding" tabindex="-1">Scaffolding <a class="header-anchor" href="#scaffolding" aria-label="Permalink to &quot;Scaffolding&quot;">​</a></h2><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>p2p Shipyard relies heavily on <a href="https://nixos.org/" target="_blank" rel="noreferrer"><code>nix</code></a> to achieve reproducible environments. Unfortunately, <code>nix</code> does not support Windows. So if you have a Windows OS, you will need to <a href="https://learn.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noreferrer">install Windows Subsystem Linux</a> and run all the steps in this guide inside of its environment.</p></div><ol start="0"><li>If you haven&#39;t already, <a href="https://nixos.org/download/#nix-install-linux" target="_blank" rel="noreferrer">install the nix package manager</a> with:</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-g8mY0" id="tab-0KhbBSf" checked><label data-title="Linux" for="tab-0KhbBSf">Linux</label><input type="radio" name="group-g8mY0" id="tab-XGTTZ_B"><label data-title="MacOs" for="tab-XGTTZ_B">MacOs</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://nixos.org/nix/install)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --daemon</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://nixos.org/nix/install)</span></span></code></pre></div></div></div><p>And follow along its instructions and prompts.</p><ol><li>Add the appropriate nix caches to your environment:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nixpkgs#cachix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> holochain-ci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nixpkgs#cachix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> darksoil-studio</span></span></code></pre></div><ol start="2"><li>In the folder where you want to create your new holochain runtime, run this command:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github:darksoil-studio/p2p-shipyard#scaffold-holochain-runtime</span></span></code></pre></div><p>And follow along its instructions and prompts.</p><ol start="3"><li>Take a look into the repository structure that the scaffold command created, specially:</li></ol><ul><li><code>flake.nix</code>: with the <code>p2p-shipyard</code> input and its <code>devShells</code>.</li><li><code>package.json</code>: added set up scripts and some <code>devDependencies</code>.</li><li><code>src-tauri</code>: here is where the code for the backend of the tauri app lives. For now it&#39;s a simple Tauri app that includes the <code>tauri-plugin-holochain</code>.</li><li><code>index.html</code>: main <code>index.html</code> file that will be displayed when the app is opened.</li><li><code>src</code>: this is where the code for the UI lives. <ul><li>The scaffolded template contains a very bare bones vanilla JS app. Look in <code>src/main.ts</code> to see how the frontend for your runtime can connect to the <code>AdminWebsocket</code>.</li></ul></li></ul><p>That&#39;s it! We now have a working skeleton for a holochain runtime.</p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>The scaffolded tauri app is missing icons, which are needed for the app to compile. Run through the rest of this guide and the following one (&quot;Getting to know Tauri&quot;) to be able to generate the icons for your Tauri app.</p></div><h2 id="development-environment" tabindex="-1">Development Environment <a class="header-anchor" href="#development-environment" aria-label="Permalink to &quot;Development Environment&quot;">​</a></h2><p>The <code>scaffold-holochain-apps</code> has added the necessary nix <code>devShells</code> to your <code>flake.nix</code> file so that you don&#39;t need to follow install anything to get the tauri or Android development environment.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Nix <code>devShells</code> are packages that describe development environments, with all their dependencies and environment variables, so that the developer does not need to configure manually their setup.</p></div><p>As usual, run this command to enter the development environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span></span></code></pre></div><p>This can take a while while it builds all the required dependencies.</p><p>Next, run these commands:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sFlgF" id="tab-YljV1gJ" checked><label data-title="npm" for="tab-YljV1gJ">npm</label><input type="radio" name="group-sFlgF" id="tab-aOLciip"><label data-title="yarn" for="tab-aOLciip">yarn</label><input type="radio" name="group-sFlgF" id="tab-VrZpftH"><label data-title="pnpm" for="tab-VrZpftH">pnpm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tauri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></div></div><p>This will start an instance of the app.</p><p>Under the hood, these commands are running tauri CLI commands. As such, we should get to know Tauri a bit better to be comfortable while developing the app. Go to <a href="./getting-to-know-tauri.html">Getting to know Tauri</a> to familiarize yourself with it.</p>`,26)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
