import{_ as a,c as i,o as t,ae as s}from"./chunks/framework.Dq7KSw7C.js";const u=JSON.parse('{"title":"Developing for Android","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/android/developing.md","filePath":"documentation/android/developing.md"}'),n={name:"documentation/android/developing.md"};function o(d,e,p,l,h,r){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="developing-for-android" tabindex="-1">Developing for Android <a class="header-anchor" href="#developing-for-android" aria-label="Permalink to &quot;Developing for Android&quot;">â€‹</a></h1><p>While developing a hApp, it&#39;s not that useful to just have one agent to test your hApp with. Instead, you usually need a couple of peers to be able to interact with one another.</p><p>The scaffolding setup steps in <a href="./../how-to-create-an-end-user-happ.html">how to create an end-user hApp</a> and <a href="./../how-to-create-a-holochain-runtime.html">how to create a holochain runtime</a> create a new script in the top level <code>package.json</code> file called <code>network:android</code>. This script runs an agent in your local computer and another in an Android device, and enables communication between them.</p><p>Since we want to develop for the Android platform, we need to be inside the <code>androidDev</code> devShell:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .#androidDev</span></span></code></pre></div><p>Run all the following commands inside this terminal shell.</p><p>Before running the <code>network:android</code> command, make sure your Android device is connected to your computer via a USB cable and accessible to the tauri tooling by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devices</span></span></code></pre></div><p>You should see your device listed in the output of that command.</p><p><strong>Also make sure that your Android device is in the same wifi network as your computer</strong>. This is necessary for them to see each other and connect in a small holochain network.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>If you haven&#39;t setup your Android device yet, head over to <a href="./device-setup.html">Android device setup</a> to do so.</p></div><p>We are now ready to run the command:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wlR7q" id="tab-NDQu8Vx" checked><label data-title="npm" for="tab-NDQu8Vx">npm</label><input type="radio" name="group-wlR7q" id="tab-Bm9B5y2"><label data-title="yarn" for="tab-Bm9B5y2">yarn</label><input type="radio" name="group-wlR7q" id="tab-taIOGer"><label data-title="pnpm" for="tab-taIOGer">pnpm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network:android</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network:android</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network:android</span></span></code></pre></div></div></div><p>If you want to see logs coming from your rust backend, you can run this command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logcat</span></span></code></pre></div><hr><p>That&#39;s it! Have fun while building your hApp. When you are satisfied with what you have and want to release a new production version of your app, go to <a href="./shipping.html">Shipping</a>.</p>',17)]))}const g=a(n,[["render",o]]);export{u as __pageData,g as default};
